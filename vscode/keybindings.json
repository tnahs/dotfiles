[
    // macOS ------------------------------------------------------------------
    //
    // Unbind `cmd+q` and rebind to `cmd+q cmd+q` to prevent unwanted quitting.
    {
        "key": "cmd+q",
        "command": "-workbench.action.quit"
    },
    {
        "key": "cmd+q cmd+q",
        "command": "workbench.action.quit"
    },
    //
    // General ----------------------------------------------------------------
    //
    // Move focus to the sidebar.
    {
        "key": "ctrl+escape",
        "command": "workbench.action.focusSideBar",
        "when": "!sidebarFocus"
    },
    // Move focus to the editor.
    {
        "key": "ctrl+escape",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorFocus"
    },
    // Toggle sidebar visibility.
    {
        "key": "ctrl+b",
        "command": "workbench.action.toggleSidebarVisibility",
    },
    // Open `Quick Open View`.
    {
        "key": "ctrl+q",
        "command": "workbench.action.quickOpenView",
    },
    // Show next problem.
    {
        "key": "ctrl+p",
        "command": "editor.action.marker.next",
    },
    // Reveal definition.
    {
        "key": "ctrl+g",
        "command": "editor.action.revealDefinition",
    },
    // Navigate code suggestions with `tab` and `shift+tab`.
    {
        "key": "tab",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "shift+tab",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetVisible"
    },
    // Navigate code suggestions with `jk`.
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetVisible"
    },
    // Navigate the `Command Palette` and `Quick Open` with `tab` and `shift+tab`.
    {
        "key": "tab",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        // Oddly this does not work.
        "key": "shift+tab",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    // Navigate the `Command Palette` and `Quick Open` with `ctrl` + `jk`.
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    // Navigate the `File Explorer` with `hjkl`.
    {
        "key": "ctrl+h",
        "command": "list.collapse",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+j",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+l",
        "command": "list.expand",
        "when": "listFocus && !inputFocus"
    },
    // Create a new file in `File Explorer`.
    {
        "key": "i",
        "command": "explorer.newFile",
        "when": "listFocus && !inputFocus"
    },
    // Create a new folder in `File Explorer`.
    {
        "key": "o",
        "command": "explorer.newFolder",
        "when": "listFocus && !inputFocus"
    },
    // Rename file/folder in `File Explorer`.
    {
        "key": "r",
        "command": "renameFile",
        "when": "listFocus && !inputFocus"
    },
    // Reveal current file in `File Explorer`.
    {
        "key": "ctrl+x",
        "command": "revealInExplorer",
    },
    // Trigger code suggesions.
    {
        "key": "ctrl+s",
        "command": "editor.action.triggerSuggest",
    },
    {
        "key": "ctrl+a",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    // TODO Add "editor.action.autoFix".
    // Navigate groups with `ctrl` + `hl`.
    {
        "key": "ctrl+h",
        "command": "workbench.action.focusLeftGroup",
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.focusRightGroup",
    },
    // Move tabs between editors with `ctrl+shift` + `hl`.
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.moveEditorToPreviousGroup",
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.moveEditorToNextGroup",
    },
    // Split editor to the right.
    {
        "key": "ctrl+t",
        "command": "workbench.action.splitEditorRight",
    },
    // Toggle the Minimap.
    {
        "key": "ctrl+c m",
        "command": "editor.action.toggleMinimap"
    },
    //
    // ------------------------------------------------------------------------
    // Rust
    {
        "key": "ctrl+c h",
        "command": "rust-analyzer.toggleInlayHints"
    },
]